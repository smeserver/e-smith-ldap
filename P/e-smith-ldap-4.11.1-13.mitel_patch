Index: e-smith-ldap/e-smith-ldap.spec
diff -u e-smith-ldap/root/etc/e-smith/events/actions/ldap-update:1.8 e-smith-ldap/root/etc/e-smith/events/actions/ldap-update:1.9
--- e-smith-ldap/root/etc/e-smith/events/actions/ldap-update:1.8	Thu Apr 14 21:24:58 2005
+++ e-smith-ldap/root/etc/e-smith/events/actions/ldap-update	Fri Apr 15 15:32:13 2005
@@ -1,24 +1,25 @@
 #!/usr/bin/perl -w
 
 #----------------------------------------------------------------------
-# copyright (C) 1999-2005 Mitel Networks Corporation
-# 
+# copyright (C) 1999, 2000 e-smith, inc.
+#		
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
-# 		
+#		
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
 # GNU General Public License for more details.
-# 		
+#		
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 # 
-# Technical support for this program is available from Mitel Networks 
-# Please visit our web site www.mitel.com/sme/ for details.
+# Technical support for this program is available from e-smith, inc.
+# For details, please visit our web site at www.e-smith.com or
+# call us on 1 888 ESMITH 1 (US/Canada toll free) or +1 613 564 8000
 #----------------------------------------------------------------------
 
 package esmith;
@@ -29,13 +30,6 @@
 use esmith::AccountsDB;
 use esmith::util;
 use Net::LDAP;
-#use Unicode::String;
-
-sub utf8
-{
-    #return Unicode::String::latin1 shift;
-    return shift;
-}
 
 my $c = esmith::ConfigDB->open_ro;
 my $a = esmith::AccountsDB->open_ro;
@@ -92,6 +86,11 @@
     password => $pw
 );
 
+my $phone = $l->prop('defaultTelephoneNumber') || '';
+my $company = $l->prop('defaultCompany') || '';
+my $dept = $l->prop('defaultDepartment') || '';
+my $city = $l->prop('defaultCity') || '';
+my $street = $l->prop('defaultStreet') || '';
 foreach my $acct (@accounts)
 {
     my $key = $acct->key;
@@ -100,46 +99,43 @@
     my @attrs = ();
     if ($type eq 'user')
     {
+	my $name = $acct->prop('FirstName') . " " . $acct->prop('LastName');
 	my $first = $acct->prop('FirstName') || '';
 	my $last = $acct->prop('LastName') || '';
-	my $name = "$first $last";
-	my $phone = $acct->prop('Phone');
-	my $company = $acct->prop('Company');
-	my $dept = $acct->prop('Dept');
-	my $city = $acct->prop('City');
-	my $street = $acct->prop('Street');
+	my $phone = $acct->prop('Phone') || '';
+	my $company = $acct->prop('Company') || '';
+	my $dept = $acct->prop('Dept') || '';
+	my $city = $acct->prop('City') || '';
+	my $street = $acct->prop('Street') || '';
 
-	push @attrs, (objectClass => 'top');
 	push @attrs, (objectClass => 'person');
 	push @attrs, (uid => $key);
 
-	push @attrs, (cn => $name ? utf8($name) : []);
-	push @attrs, (givenName => $first ? utf8($first) : []);
-	push @attrs, (sn => $last ? utf8($last) : []);
-	push @attrs, (mail => utf8("$key\@$domain"));
-	push @attrs, (telephoneNumber => $phone);
-	push @attrs, (o => $company ? utf8($company) : []);
-	push @attrs, (ou => $dept ? utf8($dept) : []);
-	push @attrs, (l => $city ? utf8($city) : []);
-	push @attrs, (street => $street ? utf8($street) : []);
+	push @attrs, (cn => $name) unless ($name =~ /^\s*$/);
+	push @attrs, (givenName => $first) unless $first =~ /^\s*$/;
+	push @attrs, (sn => $last) unless $last =~ /^\s*$/;
+	push @attrs, (mail => "$key\@$domain");
+	push @attrs, (telephoneNumber => $phone) unless $phone =~ /^\s*$/;
+	push @attrs, (o => $company) unless $company =~ /^\s*$/;
+	push @attrs, (ou => $dept) unless $dept =~ /^\s*$/;
+	push @attrs, (l => $city) unless $city =~ /^\s*$/;
+	push @attrs, (street => $street) unless $street =~ /^\s*$/;
     }
     elsif ($type eq 'group')
     {
-	push @attrs, (objectClass => 'top');
 	push @attrs, (objectClass => 'group');
 	push @attrs, (uid => $key);
 
 	my $key = $acct->key;
-	my $desc = $acct->prop('Description');
-	my $gid = $acct->prop('Gid');
-	my @members = split(',',$acct->prop('Members'));
-
-	push @attrs, (cn =>  utf8($key));
-	push @attrs, (description =>  $desc ? utf8($desc) : []);
-	push @attrs, (mail =>  utf8("$key\@$domain"));
-	push @attrs, (member => [
-		map { "uid=$_,$base" } @members
-	    ]);
+	my $desc = $acct->prop('Description') || '';
+
+	push @attrs, (cn => $desc) unless $desc =~ /^\s*$/;
+	push @attrs, (mail => "$key\@$domain");
+	push @attrs, (telephoneNumber => $phone) unless $phone =~ /^\s*$/;
+	push @attrs, (o => $company) unless $company =~ /^\s*$/;
+	push @attrs, (ou => $dept) unless $dept =~ /^\s*$/;
+	push @attrs, (l => $city) unless $city =~ /^\s*$/;
+	push @attrs, (street => $street) unless $street =~ /^\s*$/;
     }
     my $dn = "uid=$key,$base";
     if (($event eq 'user-create') || ($event eq 'group-create'))
Index: e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50groups
diff -u e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50groups:1.2 e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50groups:1.3
--- e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50groups:1.2	Thu Apr 14 21:24:58 2005
+++ e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50groups	Fri Apr 15 15:29:58 2005
@@ -1,24 +1,13 @@
 {
-    my $company = $ldap{'defaultCompany'} || '';
     foreach ($a->groups)
     {
 	my $key = $_->key;
 	my $desc = $_->prop('Description');
-	my $gid = $_->prop('Gid');
-	my @members = split(',', $_->prop('Members'));
 
 	$OUT .= "\n";
 	$OUT .= "dn: uid=$key,$ldapBase\n";
 	$OUT .= "objectClass: group\n";
-	$OUT .= "objectClass: posixGroup\n";
-	$OUT .= "gidNumber: $gid\n";
-	$OUT .= "cn: $key\n";
-	$OUT .= "description: $desc\n" if $desc;
 	$OUT .= "mail: $key\@$DomainName\n";
-	foreach my $member (@members)
-	{
-	    $OUT .= "member: uid=$member,$ldapBase\n";
-	}
-	$OUT .= "o: $company\n" if $company;
+	$OUT .= "cn: $desc\n" if $desc;
     }
 }
Index: e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50users
diff -u e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50users:1.2 e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50users:1.3
--- e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50users:1.2	Thu Apr 14 21:24:58 2005
+++ e-smith-ldap/root/etc/e-smith/templates/home/e-smith/db/ldap/ldif/50users	Fri Apr 15 15:30:38 2005
@@ -1,27 +1,19 @@
 {
-    my $d_phone = $ldap{'defaultTelephoneNumber'};
-    my $d_company = $ldap{'defaultCompany'};
-    my $d_dept = $ldap{'defaultDepartment'};
-    my $d_city = $ldap{'defaultCity'};
-    my $d_street = $ldap{'defaultStreet'};
-
     foreach my $user ($a->users)
     {
 	my $key = $user->key;
 	my $first = $user->prop('FirstName') || '';
 	my $last = $user->prop('LastName') || '';
 	my $name = "$first $last";
-	my $phone = $user->prop('Phone') || $d_phone;
-	my $company = $user->prop('Company') || $d_company;
-	my $dept = $user->prop('Dept') || $d_dept;
-	my $city = $user->prop('City') || $d_city;
-	my $street = $user->prop('Street') || $d_street;
+	my $phone = $user->prop('Phone');
+	my $company = $user->prop('Company');
+	my $dept = $user->prop('Dept');
+	my $city = $user->prop('City');
+	my $street = $user->prop('Street');
 
 	$OUT .= "\n";
 	$OUT .= utf8("dn: uid=$key,$ldapBase\n");
-	$OUT .= utf8("objectClass: top\n");
 	$OUT .= utf8("objectClass: person\n");
-	$OUT .= utf8("objectClass: inetOrgPerson\n");
 	$OUT .= utf8("uid: $key\n");
 	$OUT .= utf8("cn: $name\n") if $name;
 	$OUT .= utf8("givenName: $first\n") if $first;
@@ -32,17 +24,5 @@
 	$OUT .= utf8("ou: $dept\n") if $dept;
 	$OUT .= utf8("l: $city\n") if $city;
 	$OUT .= utf8("street: $street\n") if $street;
-
-	#$OUT .= utf8("objectClass: posixAccount\n");
-	#$OUT .= utf8("uid: \n");
-	#$OUT .= utf8("cn: \n");
-	#$OUT .= utf8("uidNumber: \n");
-	#$OUT .= utf8("gidNumber: \n");
-	#$OUT .= utf8("homeDirectory: \n");
-	# optional
-	#$OUT .= utf8("userPassword: \n");
-	#$OUT .= utf8("loginShell: \n");
-	#$OUT .= utf8("gecos: \n");
-	#$OUT .= utf8("description: \n");
     }
 }
